# Python Automation testing and deploy example

# This template allows you to push your robot from your GitLab repository to your configured
# Control Room. This configuration will run an automation's unit tests via `rcc` and deploy
# the robot to the Control Room depending on the configured environment.

# Prerequisites:
# You must configure the following variables within your GitLab project settings:
# * $CR_ACCESS_CREDENTIALS: This is the access token for your Control Room account and can be set
#   per environment or globally within your project.
# * $CR_ENDPOINT_URL: This is the API endpoint per the Control Room API helper for uploading a robot.
# * $ROBOT_ID: This is the ID of the robot within the Control Room Robot UI. You should set this for
#   each environment you have configured.
# * $WORKSPACE_ID: This is the workspace ID associated with the environment. You should set this for
#   each environment you have configured.
# The ROBOT_ID and WORKSPACE_ID should be configured at the deployment level so each pipeline deploys
# to the correct Workspace environment.
# The robot in control room must be configured as a `robot file` type of robot.
# For more information on creating/getting these values in control room, check out https://robocorp.com/docs/rcc/workflow
image: mcr.microsoft.com/playwright:v1.36.0

variables:
  ROBOCORP_HOME: $CI_PROJECT_DIR/.robocorp

cache:
  paths:
    - .robocorp

before_script:
  - apt-get update && apt-get install -y curl
  - curl -o rcc https://downloads.robocorp.com/rcc/releases/latest/linux64/rcc
  - chmod a+x rcc
  - mv rcc /usr/local/bin/
  - rcc holotree variables robot.yaml

test:
  stage: test
  script:
    - rcc run -t "UNIT TESTS"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

.deploy:
  stage: deploy
  variables:
    CR_ACCESS_CREDENTIALS: $CR_ACCESS_CREDENTIALS
    CR_ENDPOINT_URL: $CR_ENDPOINT_URL
    ROBOT_ID: $ROBOT_ID
    WORKSPACE_ID: $WORKSPACE_ID
  script:
    - >
      rcc cloud push --robot $ROBOT_ID 
      --workspace $WORKSPACE_ID 
      --account $CR_ACCESS_CREDENTIALS:$CR_ENDPOINT_URL

deploy-production:
  extends: .deploy
  environment: production
  only:
    - main

deploy-test:
  extends: .deploy
  environment: test
  only:
    - test

deploy-dev:
  extends: .deploy
  environment: dev
  only:
    - dev
